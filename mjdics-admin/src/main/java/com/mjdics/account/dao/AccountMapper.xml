<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mjdics.account.dao.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.mjdics.account.domain.Account" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ACCOUNT_ID" property="accountId" jdbcType="VARCHAR" />
    <result column="PASS" property="pass" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="MONEY" property="money" jdbcType="DECIMAL" />
    <result column="FREEZE_MONEY" property="freezeMoney" jdbcType="DECIMAL" />
    <result column="BANK_CARD" property="bankCard" jdbcType="VARCHAR" />
    <result column="BANK" property="bank" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="ADD_PERSON" property="addPerson" jdbcType="VARCHAR" />
    <result column="ADD_TIME" property="addTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="VERSION" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, ACCOUNT_ID, PASS, NAME, EMAIL, MONEY, FREEZE_MONEY, BANK_CARD, BANK, STATUS, 
    ADD_PERSON, ADD_TIME, UPDATE_TIME, VERSION
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="map" >
    select <include refid="Base_Column_List" /> from account
     order by add_time desc
      <if test="page != null and page.startRecord != -1" >
      	limit ${page.startRecord},${page.pageSize}
      </if>   
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select  <include refid="Base_Column_List" /> from account  where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account  where ID = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.mjdics.account.domain.Account" >
    insert into account (ID, ACCOUNT_ID, PASS, 
      NAME, EMAIL, MONEY, 
      FREEZE_MONEY, BANK_CARD, BANK, 
      STATUS, ADD_PERSON, ADD_TIME, 
      UPDATE_TIME, VERSION)
    values (#{id,jdbcType=INTEGER}, #{accountId,jdbcType=VARCHAR}, #{pass,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL}, 
      #{freezeMoney,jdbcType=DECIMAL}, #{bankCard,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{addPerson,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER})
  </insert>
  <select id="countByExample" parameterType="com.mjdics.account.domain.Account" resultType="java.lang.Integer" >
    select count(*) from account 
  </select>
  <update id="updateByPrimaryKey" parameterType="com.mjdics.account.domain.Account" >
    update account
    set ACCOUNT_ID = #{accountId,jdbcType=VARCHAR},
      PASS = #{pass,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      MONEY = #{money,jdbcType=DECIMAL},
      FREEZE_MONEY = #{freezeMoney,jdbcType=DECIMAL},
      BANK_CARD = #{bankCard,jdbcType=VARCHAR},
      BANK = #{bank,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      ADD_PERSON = #{addPerson,jdbcType=VARCHAR},
      ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      VERSION = #{version,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>